definitions:
  steps:
    - step: &buildAssets
        name: Build Assets
        image: node:latest
        caches:
          - node
        artifacts:
          - Resources/Public/Css/**
          - Resources/Public/Images/**
          - Resources/Public/JavaScript/**
        script:
          - npm install
          - npm run build
    - step: &buildComposer
        name: Composer install
        image: composer:latest
        caches:
          - composer
        artifacts:
          - vendor/**
          - public/**
        script:
          - composer install --prefer-dist --no-ansi --no-interaction --no-progress
    - step: &phpLint
        name: php-lint
        image: composer:latest
        script:
          - composer run ci:php:lint
    - step: &phpCsFixer
        name: php-cs-fixer
        image: composer:latest
        script:
          - composer run ci:php:fixer
    - step: &phpStan
        name: php-stan
        image: composer:latest
        script:
          - composer run ci:php:stan

pipelines:
  branches:
    9.x-dev:
      - step:
          name: Build and Install
          image: drud/ddev-webserver:v1.16.1
          script:
            - export BITBUCKET_COMMIT_SHORT=$(echo $BITBUCKET_COMMIT | cut -c1-7)
            - git fetch --unshallow
            - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
            - git fetch origin
            - git checkout 9.x
            - git merge -s ours 9.x-dev --no-commit --no-ff
            - export LATEST_TAG=$(git describe --abbrev=0 --tags | grep -Po "(\d+\.)+\d+")
            - export GIT_LOG=$(git log "v$LATEST_TAG"..HEAD --pretty=format:"%s")
            - git checkout 9.x-dev .
            - export TYPO3_EXT_VERSION=$(cat ext_emconf.php | grep version* | grep -Po "(\d+\.)+\d+")
            - composer install
            - npm install
            - echo "// @ts-nocheck" | cat - public/typo3/sysext/backend/Resources/Private/TypeScript/Modal.ts > temp && mv temp public/typo3/sysext/backend/Resources/Private/TypeScript/Modal.ts
            - npm run build
            - chmod +x Build/Scripts/cleanUp.sh && ./Build/Scripts/cleanUp.sh
            - git add */.*
            - 'if [[ $(git status --porcelain --untracked-files=no | wc -l) -gt "0" ]]; then git commit -a -m "build: $BITBUCKET_COMMIT_SHORT" --message "$GIT_LOG" || true; fi'
            - 'if [ "$TYPO3_EXT_VERSION" != "$LATEST_TAG" ]; then git tag -a "v$TYPO3_EXT_VERSION" -m ""; fi'
            - git push origin 9.x --tags
    11.x-dev:
      - step:
          name: Prepare
          artifacts:
            - '**'
          script:
            - export TYPO3_EXT_VERSION=$(cat ext_emconf.php | grep version* | grep -Po "(\d+\.)+\d+")
            - git fetch --unshallow
            - git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
            - git fetch origin
            - git checkout 11.x
            - export LATEST_TAG=$(git describe --abbrev=0 --tags | grep -Po "(\d+\.)+\d+")
            - 'if [ "$TYPO3_EXT_VERSION" != "$LATEST_TAG" ]; then git checkout -b release-$TYPO3_EXT_VERSION 11.x-dev; fi'
      - parallel:
          - step: *buildComposer
          - step: *buildAssets
      - parallel:
          - step: *phpLint
          - step: *phpCsFixer
          - step: *phpStan
      - step:
          name: Release
          script:
            - 'if [[ $(git rev-parse --abbrev-ref HEAD | cut -c 1-7) == "release" ]]; then export RELEASE_BRANCH=$(git rev-parse --abbrev-ref HEAD); fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git add */.* || true; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git commit -a -m "build: $(echo $BITBUCKET_COMMIT | cut -c1-7)" || true; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then chmod +x Build/Scripts/cleanUp.sh && ./Build/Scripts/cleanUp.sh; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git add */.*; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git commit -a -m "build: clean up" || true; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git checkout 11.x; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git merge $RELEASE_BRANCH --log; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git tag -a "v$(echo $RELEASE_BRANCH | cut -c 9-99)" -m ""; fi'
            - 'if [[ ! -z $RELEASE_BRANCH ]]; then git push origin 11.x --tags; fi'
